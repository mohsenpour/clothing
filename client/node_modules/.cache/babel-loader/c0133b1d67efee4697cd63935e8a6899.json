{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => {\n  return cartItems.reduce((totalQuantity, cartItem) => totalQuantity + cartItem.quantity, 0);\n});\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => {\n  return cartItems.reduce((totalPrice, cartItem) => totalPrice + cartItem.quantity * cartItem.price, 0);\n});","map":{"version":3,"sources":["/Users/mo/Desktop/Demo/clothing/src/redux/cart/cardSelectors.js"],"names":["createSelector","selectCart","state","cart","selectCartHidden","hidden","selectCartItems","cartItems","selectCartItemsCount","reduce","totalQuantity","cartItem","quantity","selectCartTotal","totalPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,gBAAgB,GAAGJ,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CE,IAAD,IAAUA,IAAI,CAACE,MAF6B,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAGN,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACI,SAF4B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACM,eAAD,CADgD,EAE/CC,SAAD,IAAe;AACb,SAAOA,SAAS,CAACE,MAAV,CAAiB,CAACC,aAAD,EAAgBC,QAAhB,KAA6BD,aAAa,GAAGC,QAAQ,CAACC,QAAvE,EAAiF,CAAjF,CAAP;AACD,CAJ+C,CAA3C;AAOP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACM,eAAD,CAD2C,EAE1CC,SAAD,IAAe;AACb,SAAOA,SAAS,CAACE,MAAV,CAAiB,CAACK,UAAD,EAAaH,QAAb,KACtBG,UAAU,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KADrC,EAC4C,CAD5C,CAAP;AAED,CAL0C,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden\n)\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) => {\n    return cartItems.reduce((totalQuantity, cartItem) => totalQuantity + cartItem.quantity, 0);\n  }\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  (cartItems) => {\n    return cartItems.reduce((totalPrice, cartItem) =>\n      totalPrice + cartItem.quantity * cartItem.price, 0);\n  }\n\n)"]},"metadata":{},"sourceType":"module"}