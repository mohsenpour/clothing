{"ast":null,"code":"var _jsxFileName = \"/Users/mo/Desktop/Demo/clothing/src/components/shopPage/shopPage.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../collectionsOverview/collectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collectionPage/collectionPage';\nimport { firestore, convertCollectionsSnapshotsToObject } from '../../firebase/firebase';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport Spinner from '../spinner/spinner';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collections = convertCollectionsSnapshotsToObject(snapshot);\n      updateCollections(collections);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shopPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/mo/Desktop/Demo/clothing/src/components/shopPage/shopPage.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotsToObject","connect","updateCollections","Spinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collections","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,SAAT,EAAoBC,mCAApB,QAA+D,yBAA/D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BU,KAD+B,GACvB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADuB;AAAA,SAG/BC,uBAH+B,GAGL,IAHK;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC1E,YAAMC,WAAW,GAAGd,mCAAmC,CAACa,QAAD,CAAvD;AACAX,MAAAA,iBAAiB,CAACY,WAAD,CAAjB;AACD,KAH8B,CAA/B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,uBAAL;AACD;;AAGDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEtB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEqB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEpB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5B8B;;AA+BjC,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAGY,WAAD,IAAiBM,QAAQ,CAAClB,iBAAiB,CAACY,WAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAeb,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CollectionsOverview from '../collectionsOverview/collectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collectionPage/collectionPage';\nimport { firestore, convertCollectionsSnapshotsToObject } from '../../firebase/firebase';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport Spinner from '../spinner/spinner';\n\nclass ShopPage extends Component {\n  state = { loading: true }\n\n  unsubscribeFromSnapshot = null;\n\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\n      const collections = convertCollectionsSnapshotsToObject(snapshot);\n      updateCollections(collections);\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className='shopPage'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: (collections) => dispatch(updateCollections(collections))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}