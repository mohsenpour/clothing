{"ast":null,"code":"var _jsxFileName = \"/Users/mo/Desktop/Demo/clothing/src/components/shopPage/shopPage.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../collectionsOverview/collectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collectionPage/collectionPage';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport { selectShopisFetching, selectShopIsCollectionsLoaded } from '../../redux/shop/shopSelectors';\nimport WithSpinner from '../withSpinner/withSpinner';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shopPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectShopisFetching,\n  isCollectionsLoaded: selectShopIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/mo/Desktop/Demo/clothing/src/components/shopPage/shopPage.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","connect","createStructuredSelector","fetchCollectionsStartAsync","selectShopisFetching","selectShopIsCollectionsLoaded","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,oBAAT,EAA+BC,6BAA/B,QAAoE,gCAApE;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACR,mBAAD,CAAjD;AACA,MAAMU,yBAAyB,GAAGF,WAAW,CAACN,cAAD,CAA7C;;AAEA,MAAMS,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC3B;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAT;AAAqBC,MAAAA;AAArB,QAA6C,KAAKJ,KAAxD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAA0DH,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAf8B;;AAkBjC,MAAMM,eAAe,GAAGf,wBAAwB,CAAC;AAC/CY,EAAAA,UAAU,EAAEV,oBADmC;AAE/CW,EAAAA,mBAAmB,EAAEV;AAF0B,CAAD,CAAhD;;AAMA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CollectionsOverview from '../collectionsOverview/collectionsOverview';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collectionPage/collectionPage';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport { selectShopisFetching, selectShopIsCollectionsLoaded } from '../../redux/shop/shopSelectors';\nimport WithSpinner from '../withSpinner/withSpinner';\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isFetching, isCollectionsLoaded } = this.props;\n\n    return (\n      <div className='shopPage'>\n        <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={isFetching} {...props} />} />\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectShopisFetching,\n  isCollectionsLoaded: selectShopIsCollectionsLoaded\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}